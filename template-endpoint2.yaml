AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  Role:
    Type: String
    Description: The IAM Role for Lambda execution
  SharedLayerArn:
    Type: String
    Description: The ARN of the shared layer
  FfmpegLayerArn:
    Type: String
    Description: The ARN of the ffmpeg layer
  DemoApiId:
    Type: String
    Description: The ID of the GraphQL API

Resources:
  Endpoint2DataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !Ref DemoApiId
      Name: Endpoint2DataSource
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: !GetAtt Endpoint2Function.Arn
      ServiceRoleArn: !Ref Role

  LambdaInvokePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:invokeFunction"
      FunctionName: !GetAtt Endpoint2Function.Arn
      Principal: "appsync.amazonaws.com"

  Endpoint2Resolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !Ref DemoApiId
      TypeName: "Mutation"
      FieldName: "endpoint2"
      DataSourceName: !GetAtt Endpoint2DataSource.Name
      Code: |
        import { util } from '@aws-appsync/utils';

        export function request(ctx) {
          const {source, args} = ctx;
          if (!args.data) {
            util.error(`Missing required field data`, 'BadRequestException');
          }
          return {
            operation: 'Invoke',
            payload: { data: args.data },
          };
        }

        export function response(ctx) {
          const { error, result } = ctx;
          if (error) {
            util.appendError(error.message, error.type, result);
          }
          return result;
        }
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0

  Endpoint2Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: endpoint2/
      Handler: app.lambda_handler
      Runtime: python3.11
      Layers:
        - !Ref FfmpegLayerArn
        - !Ref SharedLayerArn
